scalar Date

enum UserRole {
  User
  Moderator
  Administrator
}

enum UserKind {
  Local
  Google
  Facebook
}

type User {
  userId: ID!
  email: String
  password: String
  avatarUrl: String
  phoneNumber: String
  balance: Float!
  role: UserRole!
  walletId: ID
  firstName: String
  lastName: String
  birthday: Date
  verified: Boolean!
  kind: UserKind!
  externalId: String
}

type Tokens{
  accessToken: String!,
  refreshToken: String!
}

type SignInResponse {
  user: User!,
  tokens: Tokens!
}

type Query {
  users: [User!]!
  signIn(input: SignInInput!): SignInResponse!
}

input SignInInput {
  email: String!
  password: String!
}

type Mutation {
  verifyGoogleAccessToken(input: String!): User!
}

type Subscription {
  userCreated: User
}
